diff -ruN old/CHANGELOG new/CHANGELOG
--- old/CHANGELOG	2020-11-23 18:08:17.000000000 +0000
+++ new/CHANGELOG	2022-01-02 20:59:15.000000000 +0000
@@ -1,3 +1,8 @@
+0.6k
+Updated to latest version of CKEditor 4.17.1
+Updated to latest version of FatFree (3.7.3)
+Fixed issue with exportusers where file is left behind
+
 0.6j
 Updated to latest version of CKEditor 4.15.1
 Added admin functionality for exporting users
diff -ruN old/controllers/admin/user.php new/controllers/admin/user.php
--- old/controllers/admin/user.php	2020-11-23 18:05:56.000000000 +0000
+++ new/controllers/admin/user.php	2022-01-02 20:58:54.000000000 +0000
@@ -12,18 +12,30 @@
 	public function export($f3) {
 		$users = $this->Model->Users->fetchAll();
 		$fp = fopen('export.csv', 'w');
+
+		//Add headings
+		$headings = ['ID','Username','Display Name','Email','Password','Level','Created'];
+		fputcsv($fp,$headings);
+
+		//Add users
 		foreach($users as $user) {			
 			$fields = [$user->id,$user->username,$user->displayname,$user->email,$user->password,$user->level,$user->created];
 			fputcsv($fp,$fields);
 		}
 		fclose($fp);
-		header("Content-type: text/csv");
-		header("Content-Disposition: attachment; filename=file.csv");
-		header("Pragma: no-cache");
-		header("Expires: 0");
 
-		echo file_get_contents('export.csv');
-		exit();
+		//Output file
+		if(file_exists("export.csv")) {
+			header("Content-type: text/csv");
+			header("Content-Disposition: attachment; filename=file.csv");
+			header("Pragma: no-cache");
+			header("Expires: 0");
+			echo file_get_contents('export.csv');
+			unlink('export.csv');
+			exit();
+		} else {
+			\StatusMessage::add('Export of users failed','danger');
+		}
 	}
 
 	public function edit($f3) {	
diff -ruN old/vendor/bcosca/fatfree/lib/audit.php new/vendor/bcosca/fatfree/lib/audit.php
--- old/vendor/bcosca/fatfree/lib/audit.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/audit.php	2020-12-13 12:52:53.000000000 +0000
@@ -145,7 +145,7 @@
 			return FALSE;
 		$id=strrev($id);
 		$sum=0;
-		for ($i=0,$l=strlen($id);$i<$l;$i++)
+		for ($i=0,$l=strlen($id);$i<$l;++$i)
 			$sum+=$id[$i]+$i%2*(($id[$i]>4)*-4+$id[$i]%5);
 		return !($sum%10);
 	}
diff -ruN old/vendor/bcosca/fatfree/lib/base.php new/vendor/bcosca/fatfree/lib/base.php
--- old/vendor/bcosca/fatfree/lib/base.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/base.php	2020-12-13 12:52:53.000000000 +0000
@@ -45,7 +45,7 @@
 	//@{ Framework details
 	const
 		PACKAGE='Fat-Free Framework',
-		VERSION='3.7.2-Release';
+		VERSION='3.7.3-Release';
 	//@}
 
 	//@{ HTTP status codes (RFC 2616)
@@ -186,7 +186,7 @@
 						array_key_exists($match[3],$args)) {
 						if (!is_array($args[$match[3]]))
 							return $args[$match[3]];
-						$i++;
+						++$i;
 						return $args[$match[3]][$i-1];
 					}
 					return $match[0];
@@ -1293,10 +1293,10 @@
 			function($frame) use($debug) {
 				return isset($frame['file']) &&
 					($debug>1 ||
-					($frame['file']!=__FILE__ || $debug) &&
+					(($frame['file']!=__FILE__ || $debug) &&
 					(empty($frame['function']) ||
 					!preg_match('/^(?:(?:trigger|user)_error|'.
-						'__call|call_user_func)/',$frame['function'])));
+						'__call|call_user_func)/',$frame['function']))));
 			}
 		);
 		if (!$format)
@@ -1349,8 +1349,8 @@
 						error_log($nexus);
 				break;
 			}
-		if ($highlight=!$this->hive['CLI'] && !$this->hive['AJAX'] &&
-			$this->hive['HIGHLIGHT'] && is_file($css=__DIR__.'/'.self::CSS))
+		if ($highlight=(!$this->hive['CLI'] && !$this->hive['AJAX'] &&
+			$this->hive['HIGHLIGHT'] && is_file($css=__DIR__.'/'.self::CSS)))
 			$trace=$this->highlight($trace);
 		$this->hive['ERROR']=[
 			'status'=>$header,
@@ -1366,29 +1366,34 @@
 		if ((!$handler ||
 			$this->call($handler,[$this,$this->hive['PARAMS']],
 				'beforeroute,afterroute')===FALSE) &&
-			!$prior && !$this->hive['CLI'] && !$this->hive['QUIET'])
-			echo $this->hive['AJAX']?
-				json_encode(
-					array_diff_key(
-						$this->hive['ERROR'],
-						$this->hive['DEBUG']?
-							[]:
-							['trace'=>1]
-					)
-				):
-				('<!DOCTYPE html>'.$eol.
-				'<html>'.$eol.
-				'<head>'.
-					'<title>'.$code.' '.$header.'</title>'.
-					($highlight?
-						('<style>'.$this->read($css).'</style>'):'').
-				'</head>'.$eol.
-				'<body>'.$eol.
-					'<h1>'.$header.'</h1>'.$eol.
-					'<p>'.$this->encode($text?:$req).'</p>'.$eol.
-					($this->hive['DEBUG']?('<pre>'.$trace.'</pre>'.$eol):'').
-				'</body>'.$eol.
-				'</html>');
+			!$prior && !$this->hive['QUIET']) {
+			$error=array_diff_key(
+				$this->hive['ERROR'],
+				$this->hive['DEBUG']?
+					[]:
+					['trace'=>1]
+			);
+			if ($this->hive['CLI'])
+				echo PHP_EOL.'==================================='.PHP_EOL.
+					'ERROR '.$error['code'].' - '.$error['status'].PHP_EOL.
+					$error['text'].PHP_EOL.PHP_EOL.$error['trace'];
+			else
+				echo $this->hive['AJAX']?
+					json_encode($error):
+					('<!DOCTYPE html>'.$eol.
+					'<html>'.$eol.
+					'<head>'.
+						'<title>'.$code.' '.$header.'</title>'.
+						($highlight?
+							('<style>'.$this->read($css).'</style>'):'').
+					'</head>'.$eol.
+					'<body>'.$eol.
+						'<h1>'.$header.'</h1>'.$eol.
+						'<p>'.$this->encode($text?:$req).'</p>'.$eol.
+						($this->hive['DEBUG']?('<pre>'.$trace.'</pre>'.$eol):'').
+					'</body>'.$eol.
+					'</html>');
+		}
 		if ($this->hive['HALT'])
 			die(1);
 	}
@@ -1615,7 +1620,7 @@
 		$i=0;
 		while (is_int($pos=strpos($wild,'\*'))) {
 			$wild=substr_replace($wild,'(?P<_'.$i.'>[^\?]*)',$pos,2);
-			$i++;
+			++$i;
 		}
 		preg_match('/^'.
 			preg_replace(
@@ -1767,7 +1772,7 @@
 						$ctr=0;
 						foreach (str_split($body,1024) as $part) {
 							// Throttle output
-							$ctr++;
+							++$ctr;
 							if ($ctr/$kbps>($elapsed=microtime(TRUE)-$now) &&
 								!connection_aborted())
 								usleep(1e6*($ctr/$kbps-$elapsed));
@@ -2197,7 +2202,7 @@
 			isset($path[1]) && is_callable($path[1]))
 			list($path,$func)=$path;
 		foreach ($this->split($this->hive['PLUGINS'].';'.$path) as $auto)
-			if ($func && is_file($file=$func($auto.$class).'.php') ||
+			if (($func && is_file($file=$func($auto.$class).'.php')) ||
 				is_file($file=$auto.$class.'.php') ||
 				is_file($file=$auto.strtolower($class).'.php') ||
 				is_file($file=strtolower($auto.$class).'.php'))
@@ -2345,11 +2350,11 @@
 		if (!isset($_SERVER['SERVER_NAME']) || $_SERVER['SERVER_NAME']==='')
 			$_SERVER['SERVER_NAME']=gethostname();
 		$headers=[];
-		if ($cli=PHP_SAPI=='cli') {
+		if ($cli=(PHP_SAPI=='cli')) {
 			// Emulate HTTP request
 			$_SERVER['REQUEST_METHOD']='GET';
 			if (!isset($_SERVER['argv'][1])) {
-				$_SERVER['argc']++;
+				++$_SERVER['argc'];
 				$_SERVER['argv'][1]='/';
 			}
 			$req=$query='';
@@ -2433,9 +2438,9 @@
 			'samesite'=>'Lax',
 		];
 		$port=80;
-		if (isset($headers['X-Forwarded-Port']))
+		if (!empty($headers['X-Forwarded-Port']))
 			$port=$headers['X-Forwarded-Port'];
-		elseif (isset($_SERVER['SERVER_PORT']))
+		elseif (!empty($_SERVER['SERVER_PORT']))
 			$port=$_SERVER['SERVER_PORT'];
 		// Default configuration
 		$this->hive+=[
@@ -2496,7 +2501,7 @@
 			'QUIET'=>FALSE,
 			'RAW'=>FALSE,
 			'REALM'=>$scheme.'://'.$_SERVER['SERVER_NAME'].
-				($port && !in_array($port,[80,443])?(':'.$port):'').
+				(!in_array($port,[80,443])?(':'.$port):'').
 				$_SERVER['REQUEST_URI'],
 			'RESPONSE'=>'',
 			'ROOT'=>$_SERVER['DOCUMENT_ROOT'],
@@ -2740,7 +2745,7 @@
 			case 'xcache':
 				if ($suffix && !ini_get('xcache.admin.enable_auth')) {
 					$cnt=xcache_count(XC_TYPE_VAR);
-					for ($i=0;$i<$cnt;$i++) {
+					for ($i=0;$i<$cnt;++$i) {
 						$list=xcache_list(XC_TYPE_VAR,$i);
 						foreach ($list['cache_list'] as $item)
 							if (preg_match($regex,$item['name']))
@@ -2898,10 +2903,10 @@
 		unset($fw,$hive,$implicit,$mime);
 		extract($this->temp);
 		$this->temp=NULL;
-		$this->level++;
+		++$this->level;
 		ob_start();
 		require($this->file);
-		$this->level--;
+		--$this->level;
 		return ob_get_clean();
 	}
 
diff -ruN old/vendor/bcosca/fatfree/lib/bcrypt.php new/vendor/bcosca/fatfree/lib/bcrypt.php
--- old/vendor/bcosca/fatfree/lib/bcrypt.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/bcrypt.php	2020-12-13 12:52:53.000000000 +0000
@@ -56,7 +56,7 @@
 			if (!$iv && extension_loaded('openssl'))
 				$iv=openssl_random_pseudo_bytes($raw);
 			if (!$iv)
-				for ($i=0;$i<$raw;$i++)
+				for ($i=0;$i<$raw;++$i)
 					$iv.=chr(mt_rand(0,255));
 			$salt=str_replace('+','.',base64_encode($iv));
 		}
@@ -88,7 +88,7 @@
 		if ($len!=strlen($hash) || $len<14)
 			return FALSE;
 		$out=0;
-		for ($i=0;$i<$len;$i++)
+		for ($i=0;$i<$len;++$i)
 			$out|=(ord($val[$i])^ord($hash[$i]));
 		return $out===0;
 	}
diff -ruN old/vendor/bcosca/fatfree/lib/CHANGELOG.md new/vendor/bcosca/fatfree/lib/CHANGELOG.md
--- old/vendor/bcosca/fatfree/lib/CHANGELOG.md	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/CHANGELOG.md	2020-12-13 12:52:53.000000000 +0000
@@ -1,19 +1,34 @@
 CHANGELOG
 
+3.7.3
+*   NEW: added auto_increment detection, [bcosca/fatfree#1192](https://github.com/bcosca/fatfree/issues/1192), [bcosca/fatfree#1093](https://github.com/bcosca/fatfree/issues/1093), [bcosca/fatfree#1175](https://github.com/bcosca/fatfree/issues/1175), [#290](https://github.com/bcosca/fatfree-core/issues/290)
+*   added SMTP dialog error handling, [#317](https://github.com/bcosca/fatfree-core/issues/317)
+*   Fix: Check active transaction before rollback/commit (PHP8 issue)
+*   refactored increment/decrement operator to preceed variables
+*   added error output in CLI mode, [bcosca/fatfree#1185](https://github.com/bcosca/fatfree/issues/1185)
+*   Set PORT to 80 when SERVER_PORT is an empty string
+*   Fix: unescape dbname when extracting from dsn, [#316](https://github.com/bcosca/fatfree-core/issues/316)
+*   Fix: handling of PDO prepare() errors
+*   Fix: edge case in DB\SQL->schema(): PK not detected in PgSQL when the column is also a FK [bcosca/fatfree#1207](https://github.com/bcosca/fatfree/issues/1207)
+*   Fix: Escape literal hyphens in regex character classes, [bcosca/fatfree#1206](https://github.com/bcosca/fatfree/issues/1206)
+*   Fix: error highlighting
+*   Fix: pagination with order by on virtual fields
+*   Fixed a couple PHPDOC issues
+ 
 3.7.2 (28 May 2020)
-*   CHANGED, View->sandbox: disable escaping when rendering as text/plain, bcosca/fatfree#654
-*   update HTTP protocol checks, #bcosca/fatfree#1190
-*   Base->clear: close vulnerability on variable compilation, bcosca/fatfree#1191
-*   DB\SQL\Mapper: fix empty ID after insert, bcosca/fatfree#1175
+*   CHANGED, View->sandbox: disable escaping when rendering as text/plain, [bcosca/fatfree#654](https://github.com/bcosca/fatfree/issues/654)
+*   update HTTP protocol checks, [bcosca/fatfree#1190](https://github.com/bcosca/fatfree/issues/1190)
+*   Base->clear: close vulnerability on variable compilation, [bcosca/fatfree#1191](https://github.com/bcosca/fatfree/issues/1191)
+*   DB\SQL\Mapper: fix empty ID after insert, [bcosca/fatfree#1175](https://github.com/bcosca/fatfree/issues/1175)
 *   DB\SQL\Mapper: fix using correct key variable for grouped sql pagination sets
-*   Fix return type of 'count' in Cursor->paginate() (bcosca/fatfree#1187)
-*   Bug fix, Web->minify: fix minification of ES6 template literals, bcosca/fatfree#1178
-*   Bug fix, config: refactoring custom section parser regex, bcosca/fatfree#1149
-*   Bug fix: token resolve on non-alias reroute paths, ref. 221f0c930f8664565c9825faeb9ed9af0f7a01c8
+*   Fix return type of 'count' in Cursor->paginate(), [bcosca/fatfree#1187](https://github.com/bcosca/fatfree/issues/1187)
+*   Bug fix, Web->minify: fix minification of ES6 template literals, [bcosca/fatfree#1178](https://github.com/bcosca/fatfree/issues/1178)
+*   Bug fix, config: refactoring custom section parser regex, [bcosca/fatfree#1149](https://github.com/bcosca/fatfree/issues/1149)
+*   Bug fix: token resolve on non-alias reroute paths, [ref. 221f0c9](https://github.com/bcosca/fatfree-core/commit/221f0c930f8664565c9825faeb9ed9af0f7a01c8)
 *   Websocket: Improved event handler usage
 *   optimized internal get calls
 *   only use cached lexicon when a $ttl was given
-*   only use money_format up until php7.4, fixes bcosca/fatfree#1174
+*   only use money_format up until php7.4, [bcosca/fatfree#1174](https://github.com/bcosca/fatfree/issues/1174)
 
 3.7.1 (30. December 2019)
 *   Base->build: Add support for brace-enclosed route tokens
diff -ruN old/vendor/bcosca/fatfree/lib/cli/ws.php new/vendor/bcosca/fatfree/lib/cli/ws.php
--- old/vendor/bcosca/fatfree/lib/cli/ws.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/cli/ws.php	2020-12-13 12:52:53.000000000 +0000
@@ -424,16 +424,16 @@
 			}
 			else
 			if ($len==0x7f) {
-				for ($i=0,$len=0;$i<8;$i++)
+				for ($i=0,$len=0;$i<8;++$i)
 					$len=$len*256+ord($buf[$i+2]);
 				$pos+=8;
 			}
-			for ($i=0,$mask=[];$i<4;$i++)
+			for ($i=0,$mask=[];$i<4;++$i)
 				$mask[$i]=ord($buf[$pos+$i]);
 			$pos+=4;
 			if (strlen($buf)<$len+$pos)
 				return FALSE;
-			for ($i=0,$data='';$i<$len;$i++)
+			for ($i=0,$data='';$i<$len;++$i)
 				$data.=chr(ord($buf[$pos+$i])^$mask[$i%4]);
 			// Dispatch
 			switch ($op & WS::OpCode) {
diff -ruN old/vendor/bcosca/fatfree/lib/db/jig/mapper.php new/vendor/bcosca/fatfree/lib/db/jig/mapper.php
--- old/vendor/bcosca/fatfree/lib/db/jig/mapper.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/db/jig/mapper.php	2020-12-13 12:52:53.000000000 +0000
@@ -206,7 +206,7 @@
 							if (is_string($token))
 								if ($token=='?') {
 									// Positional
-									$ctr++;
+									++$ctr;
 									$key=$ctr;
 								}
 								else {
diff -ruN old/vendor/bcosca/fatfree/lib/db/sql/mapper.php new/vendor/bcosca/fatfree/lib/db/sql/mapper.php
--- old/vendor/bcosca/fatfree/lib/db/sql/mapper.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/db/sql/mapper.php	2020-12-13 12:52:53.000000000 +0000
@@ -378,6 +378,9 @@
 			// for simple count just add a new adhoc counter
 			$fields='COUNT(*) AS '.$this->db->quotekey('_rows');
 		}
+		// no need to order for a count query as that could include virtual
+		// field references that are not present here
+		unset($options['order']);
 		list($sql,$args)=$this->stringify($fields,$filter,$options);
 		if ($subquery_mode)
 			$sql='SELECT COUNT(*) AS '.$this->db->quotekey('_rows').' '.
@@ -438,27 +441,30 @@
 			// duplicate record
 			foreach ($this->fields as $key=>&$field) {
 				$field['changed']=true;
-				if ($field['pkey'] && !$inc && $field['pdo_type']==\PDO::PARAM_INT
-					&& !$field['nullable'])
+				if ($field['pkey'] && !$inc && ($field['auto_inc'] === TRUE ||
+						($field['auto_inc'] === NULL && !$field['nullable']
+							&& $field['pdo_type']==\PDO::PARAM_INT)
+				))
 					$inc=$key;
 				unset($field);
 			}
 		foreach ($this->fields as $key=>&$field) {
 			if ($field['pkey']) {
 				$field['previous']=$field['value'];
-				if (!$inc && $field['pdo_type']==\PDO::PARAM_INT &&
-					empty($field['value']) && !$field['nullable'] &&
-					is_null($field['default']))
+				if (!$inc && empty($field['value']) &&
+					($field['auto_inc'] === TRUE || ($field['auto_inc'] === NULL
+						&& $field['pdo_type']==\PDO::PARAM_INT && !$field['nullable']))
+				)
 					$inc=$key;
 				$filter.=($filter?' AND ':'').$this->db->quotekey($key).'=?';
 				$nkeys[$nctr+1]=[$field['value'],$field['pdo_type']];
-				$nctr++;
+				++$nctr;
 			}
 			if ($field['changed'] && $key!=$inc) {
 				$fields.=($actr?',':'').$this->db->quotekey($key);
 				$values.=($actr?',':'').'?';
 				$args[$actr+1]=[$field['value'],$field['pdo_type']];
-				$actr++;
+				++$actr;
 				$ckeys[]=$key;
 			}
 			unset($field);
@@ -617,7 +623,7 @@
 				$filter.=($filter?' AND ':'').$this->db->quotekey($key).'=?';
 				$args[$ctr+1]=[$field['previous'],$field['pdo_type']];
 				$pkeys[$key]=$field['previous'];
-				$ctr++;
+				++$ctr;
 			}
 			$field['value']=NULL;
 			$field['changed']=(bool)$field['default'];
diff -ruN old/vendor/bcosca/fatfree/lib/db/sql.php new/vendor/bcosca/fatfree/lib/db/sql.php
--- old/vendor/bcosca/fatfree/lib/db/sql.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/db/sql.php	2020-12-13 12:52:53.000000000 +0000
@@ -66,7 +66,9 @@
 	*	@return bool
 	**/
 	function rollback() {
-		$out=$this->pdo->rollback();
+		$out=FALSE;
+		if ($this->pdo->inTransaction())
+			$out=$this->pdo->rollback();
 		$this->trans=FALSE;
 		return $out;
 	}
@@ -76,7 +78,9 @@
 	*	@return bool
 	**/
 	function commit() {
-		$out=$this->pdo->commit();
+		$out=FALSE;
+		if ($this->pdo->inTransaction())
+			$out=$this->pdo->commit();
 		$this->trans=FALSE;
 		return $out;
 	}
@@ -173,7 +177,7 @@
 		$fw=\Base::instance();
 		$cache=\Cache::instance();
 		$result=FALSE;
-		for ($i=0;$i<$count;$i++) {
+		for ($i=0;$i<$count;++$i) {
 			$cmd=$cmds[$i];
 			$arg=$args[$i];
 			// ensure 1-based arguments
@@ -257,7 +261,7 @@
 				$query->closecursor();
 				unset($query);
 			}
-			elseif (($error=$this->errorinfo()) && $error[0]!=\PDO::ERR_NONE) {
+			elseif (($error=$this->pdo->errorInfo()) && $error[0]!=\PDO::ERR_NONE) {
 				// PDO-level error occurred
 				if ($this->trans)
 					$this->rollback();
@@ -321,19 +325,37 @@
 		if (strpos($table,'.'))
 			list($schema,$table)=explode('.',$table);
 		// Supported engines
+		// format: engine_name => array of:
+		//	0: query
+		//	1: field name of column name
+		//	2: field name of column type
+		//	3: field name of default value
+		//	4: field name of nullable value
+		//	5: expected field value to be nullable
+		//	6: field name of primary key flag
+		//	7: expected field value to be a primary key
+		//	8: field name of auto increment check (optional)
+		//	9: expected field value to be an auto-incremented identifier
 		$cmd=[
 			'sqlite2?'=>[
-				'PRAGMA table_info(`'.$table.'`)',
-				'name','type','dflt_value','notnull',0,'pk',TRUE],
+				'SELECT * FROM pragma_table_info('.$this->quote($table).') JOIN ('.
+					'SELECT sql FROM sqlite_master WHERE type=\'table\' AND '.
+					'name='.$this->quote($table).')',
+				'name','type','dflt_value','notnull',0,'pk',TRUE,'sql',
+					'/\W(%s)\W+[^,]+?AUTOINCREMENT\W/i'],
 			'mysql'=>[
 				'SHOW columns FROM `'.$this->dbname.'`.`'.$table.'`',
-				'Field','Type','Default','Null','YES','Key','PRI'],
+				'Field','Type','Default','Null','YES','Key','PRI','Extra','auto_increment'],
 			'mssql|sqlsrv|sybase|dblib|pgsql|odbc'=>[
 				'SELECT '.
 					'C.COLUMN_NAME AS field,'.
 					'C.DATA_TYPE AS type,'.
 					'C.COLUMN_DEFAULT AS defval,'.
 					'C.IS_NULLABLE AS nullable,'.
+				($this->engine=='pgsql'
+					?'COALESCE(POSITION(\'nextval\' IN C.COLUMN_DEFAULT),0) AS autoinc,'
+					:'columnproperty(object_id(C.TABLE_NAME),C.COLUMN_NAME,\'IsIdentity\')'
+						.' AS autoinc,').
 					'T.CONSTRAINT_TYPE AS pkey '.
 				'FROM INFORMATION_SCHEMA.COLUMNS AS C '.
 				'LEFT OUTER JOIN '.
@@ -356,7 +378,7 @@
 					($this->dbname?
 						(' AND C.TABLE_CATALOG='.
 							$this->quote($this->dbname)):''),
-				'field','type','defval','nullable','YES','pkey','PRIMARY KEY'],
+				'field','type','defval','nullable','YES','pkey','PRIMARY KEY','autoinc',1],
 			'oci'=>[
 				'SELECT c.column_name AS field, '.
 					'c.data_type AS type, '.
@@ -390,15 +412,22 @@
 						foreach ($conv as $regex=>$type)
 							if (preg_match('/'.$regex.'/i',$row[$val[2]]))
 								break;
-						$rows[$row[$val[1]]]=[
-							'type'=>$row[$val[2]],
-							'pdo_type'=>$type,
-							'default'=>is_string($row[$val[3]])?
-								preg_replace('/^\s*([\'"])(.*)\1\s*/','\2',
-								$row[$val[3]]):$row[$val[3]],
-							'nullable'=>$row[$val[4]]==$val[5],
-							'pkey'=>$row[$val[6]]==$val[7]
-						];
+						if (!isset($rows[$row[$val[1]]])) // handle duplicate rows in PgSQL
+							$rows[$row[$val[1]]]=[
+								'type'=>$row[$val[2]],
+								'pdo_type'=>$type,
+								'default'=>is_string($row[$val[3]])?
+									preg_replace('/^\s*([\'"])(.*)\1\s*/','\2',
+									$row[$val[3]]):$row[$val[3]],
+								'nullable'=>$row[$val[4]]==$val[5],
+								'pkey'=>$row[$val[6]]==$val[7],
+								'auto_inc'=>isset($val[8]) && isset($row[$val[8]])
+									? ($this->engine=='sqlite'?
+										(bool) preg_match(sprintf($val[9],$row[$val[1]]),
+											$row[$val[8]]):
+										($row[$val[8]]==$val[9])
+									) : NULL,
+							];
 					}
 				if ($fw->CACHE && $ttl)
 					// Save to cache backend
@@ -510,7 +539,7 @@
 		$fw=\Base::instance();
 		$this->uuid=$fw->hash($this->dsn=$dsn);
 		if (preg_match('/^.+?(?:dbname|database)=(.+?)(?=;|$)/is',$dsn,$parts))
-			$this->dbname=$parts[1];
+			$this->dbname=str_replace('\\ ',' ',$parts[1]);
 		if (!$options)
 			$options=[];
 		if (isset($parts[0]) && strstr($parts[0],':',TRUE)=='mysql')
diff -ruN old/vendor/bcosca/fatfree/lib/image.php new/vendor/bcosca/fatfree/lib/image.php
--- old/vendor/bcosca/fatfree/lib/image.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/image.php	2020-12-13 12:52:53.000000000 +0000
@@ -367,15 +367,15 @@
 		imagefill($this->data,0,0,IMG_COLOR_TRANSPARENT);
 		$ctr=count($sprites);
 		$dim=$blocks*floor($size/$blocks)*2/$blocks;
-		for ($j=0,$y=ceil($blocks/2);$j<$y;$j++)
-			for ($i=$j,$x=$blocks-1-$j;$i<$x;$i++) {
+		for ($j=0,$y=ceil($blocks/2);$j<$y;++$j)
+			for ($i=$j,$x=$blocks-1-$j;$i<$x;++$i) {
 				$sprite=imagecreatetruecolor($dim,$dim);
 				imagefill($sprite,0,0,IMG_COLOR_TRANSPARENT);
 				$block=$sprites[hexdec($hash[($j*$blocks+$i)*2])%$ctr];
-				for ($k=0,$pts=count($block);$k<$pts;$k++)
+				for ($k=0,$pts=count($block);$k<$pts;++$k)
 					$block[$k]*=$dim;
 				imagefilledpolygon($sprite,$block,$pts/2,$fg);
-				for ($k=0;$k<4;$k++) {
+				for ($k=0;$k<4;++$k) {
 					imagecopyresampled($this->data,$sprite,
 						$i*$dim/2,$j*$dim/2,0,0,$dim/2,$dim/2,$dim,$dim);
 					$this->data=imagerotate($this->data,90,
@@ -416,7 +416,7 @@
 					-$len));
 				$block=$size*3;
 				$tmp=[];
-				for ($i=0,$width=0,$height=0;$i<$len;$i++) {
+				for ($i=0,$width=0,$height=0;$i<$len;++$i) {
 					// Process at 2x magnification
 					$box=imagettfbbox($size*2,0,$path,$seed[$i]);
 					$w=$box[2]-$box[0];
@@ -440,7 +440,7 @@
 				}
 				$this->data=imagecreatetruecolor($width,$height);
 				imagefill($this->data,0,0,IMG_COLOR_TRANSPARENT);
-				for ($i=0;$i<$len;$i++) {
+				for ($i=0;$i<$len;++$i) {
 					imagecopy($this->data,$tmp[$i],
 						$i*$block/2,($height-imagesy($tmp[$i]))/2,0,0,
 						imagesx($tmp[$i]),imagesy($tmp[$i]));
@@ -520,7 +520,7 @@
 		if ($this->flag) {
 			if (!is_dir($dir=$fw->TEMP))
 				mkdir($dir,Base::MODE,TRUE);
-			$this->count++;
+			++$this->count;
 			$fw->write($dir.'/'.$fw->SEED.'.'.
 				$fw->hash($this->file).'-'.$this->count.'.png',
 				$this->dump());
diff -ruN old/vendor/bcosca/fatfree/lib/markdown.php new/vendor/bcosca/fatfree/lib/markdown.php
--- old/vendor/bcosca/fatfree/lib/markdown.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/markdown.php	2020-12-13 12:52:53.000000000 +0000
@@ -224,7 +224,7 @@
 		$type='ul';
 		// Main loop
 		while ($ptr<$len) {
-			if (preg_match('/^\h*[*-](?:\h?[*-]){2,}(?:\n+|$)/',
+			if (preg_match('/^\h*[*\-](?:\h?[*\-]){2,}(?:\n+|$)/',
 				substr($str,$ptr),$match)) {
 				$ptr+=strlen($match[0]);
 				// Embedded horizontal rule
@@ -232,7 +232,7 @@
 					('<'.$type.'>'."\n".$dst.'</'.$type.'>'."\n\n"):'').
 					'<hr />'."\n\n".$this->build(substr($str,$ptr));
 			}
-			elseif (preg_match('/(?<=^|\n)([*+-]|\d+\.)\h'.
+			elseif (preg_match('/(?<=^|\n)([*+\-]|\d+\.)\h'.
 				'(.+?(?:\n+|$))((?:(?: {4}|\t)+.+?(?:\n+|$))*)/s',
 				substr($str,$ptr),$match)) {
 				$match[3]=preg_replace('/(?<=^|\n)(?: {4}|\t)/','',$match[3]);
@@ -466,10 +466,10 @@
 				'pre'=>'/^(?:(?: {4}|\t).+?(?:\n+|$))+/',
 				'fence'=>'/^`{3}\h*(\w+)?.*?[^\n]*\n+(.+?)`{3}[^\n]*'.
 					'(?:\n+|$)/s',
-				'hr'=>'/^\h*[*_-](?:\h?[\*_-]){2,}\h*(?:\n+|$)/',
+				'hr'=>'/^\h*[*_\-](?:\h?[\*_\-]){2,}\h*(?:\n+|$)/',
 				'atx'=>'/^\h*(#{1,6})\h?(.+?)\h*(?:#.*)?(?:\n+|$)/',
-				'setext'=>'/^\h*(.+?)\h*\n([=-])+\h*(?:\n+|$)/',
-				'li'=>'/^(?:(?:[*+-]|\d+\.)\h.+?(?:\n+|$)'.
+				'setext'=>'/^\h*(.+?)\h*\n([=\-])+\h*(?:\n+|$)/',
+				'li'=>'/^(?:(?:[*+\-]|\d+\.)\h.+?(?:\n+|$)'.
 					'(?:(?: {4}|\t)+.+?(?:\n+|$))*)+/s',
 				'raw'=>'/^((?:<!--.+?-->|'.
 					'<(address|article|aside|audio|blockquote|canvas|dd|'.
diff -ruN old/vendor/bcosca/fatfree/lib/matrix.php new/vendor/bcosca/fatfree/lib/matrix.php
--- old/vendor/bcosca/fatfree/lib/matrix.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/matrix.php	2020-12-13 12:52:53.000000000 +0000
@@ -130,7 +130,7 @@
 			$days=cal_days_in_month(CAL_GREGORIAN,$parts['mon'],$parts['year']);
 			$ref=date('w',strtotime(date('Y-m',$parts[0]).'-01'))+(7-$first)%7;
 			$out=[];
-			for ($i=0;$i<$days;$i++)
+			for ($i=0;$i<$days;++$i)
 				$out[floor(($ref+$i)/7)][($ref+$i)%7]=$i+1;
 		}
 		return $out;
diff -ruN old/vendor/bcosca/fatfree/lib/smtp.php new/vendor/bcosca/fatfree/lib/smtp.php
--- old/vendor/bcosca/fatfree/lib/smtp.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/smtp.php	2020-12-13 12:52:53.000000000 +0000
@@ -27,7 +27,8 @@
 	const
 		E_Header='%s: header is required',
 		E_Blank='Message must not be blank',
-		E_Attach='Attachment %s not found';
+		E_Attach='Attachment %s not found',
+		E_DIALOG='SMTP dialog error: %s';
 	//@}
 
 	protected
@@ -59,7 +60,7 @@
 	**/
 	protected function fixheader($key) {
 		return str_replace(' ','-',
-			ucwords(preg_replace('/[_-]/',' ',strtolower($key))));
+			ucwords(preg_replace('/[_\-]/',' ',strtolower($key))));
 	}
 
 	/**
@@ -157,6 +158,8 @@
 				$this->log.=$cmd."\n";
 			$this->log.=str_replace("\r",'',$reply);
 		}
+		if (preg_match('/^(4|5)\d{2}\s.*$/', $reply))
+			user_error(sprintf(self::E_DIALOG,$reply),E_USER_ERROR);
 		return $reply;
 	}
 
diff -ruN old/vendor/bcosca/fatfree/lib/template.php new/vendor/bcosca/fatfree/lib/template.php
--- old/vendor/bcosca/fatfree/lib/template.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/template.php	2020-12-13 12:52:53.000000000 +0000
@@ -273,7 +273,7 @@
 		// Build tree structure
 		for ($ptr=0,$w=5,$len=strlen($text),$tree=[],$tmp='';$ptr<$len;)
 			if (preg_match('/^(.{0,'.$w.'}?)<(\/?)(?:F3:)?'.
-				'('.$this->tags.')\b((?:\s+[\w.:@!-]+'.
+				'('.$this->tags.')\b((?:\s+[\w.:@!\-]+'.
 				'(?:\h*=\h*(?:"(?:.*?)"|\'(?:.*?)\'))?|'.
 				'\h*\{\{.+?\}\})*)\h*(\/?)>/is',
 				substr($text,$ptr),$match)) {
@@ -283,7 +283,7 @@
 				if ($match[2]) {
 					// Find matching start tag
 					$stack=[];
-					for($i=count($tree)-1;$i>=0;$i--) {
+					for($i=count($tree)-1;$i>=0;--$i) {
 						$item=$tree[$i];
 						if (is_array($item) &&
 							array_key_exists($match[3],$item) &&
@@ -326,7 +326,7 @@
 				$tmp.=substr($text,$ptr,$w);
 				$ptr+=$w;
 				if ($w<50)
-					$w++;
+					++$w;
 			}
 		if (strlen($tmp))
 			// Append trailing text
diff -ruN old/vendor/bcosca/fatfree/lib/web/oauth2.php new/vendor/bcosca/fatfree/lib/web/oauth2.php
--- old/vendor/bcosca/fatfree/lib/web/oauth2.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/web/oauth2.php	2020-12-13 12:52:53.000000000 +0000
@@ -44,10 +44,10 @@
 
 	/**
 	*	Send request to API/token endpoint
-	*	@return string|FALSE
+	*	@return string|array|FALSE
 	*	@param $uri string
 	*	@param $method string
-	*	@param $token array
+	*	@param $token string
 	**/
 	function request($uri,$method,$token=NULL) {
 		$web=\Web::instance();
diff -ruN old/vendor/bcosca/fatfree/lib/web/openid.php new/vendor/bcosca/fatfree/lib/web/openid.php
--- old/vendor/bcosca/fatfree/lib/web/openid.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/web/openid.php	2020-12-13 12:52:53.000000000 +0000
@@ -103,7 +103,7 @@
 					$ptr+=strlen($parts[0]);
 				}
 				else
-					$ptr++;
+					++$ptr;
 		}
 		// Get OpenID provider's endpoint URL
 		if (isset($this->args['provider'])) {
diff -ruN old/vendor/bcosca/fatfree/lib/web.php new/vendor/bcosca/fatfree/lib/web.php
--- old/vendor/bcosca/fatfree/lib/web.php	2020-05-28 17:20:24.000000000 +0100
+++ new/vendor/bcosca/fatfree/lib/web.php	2020-12-13 12:52:53.000000000 +0000
@@ -230,7 +230,7 @@
 				!$info['timed_out'] && !connection_aborted()) {
 				if ($kbps) {
 					// Throttle output
-					$ctr++;
+					++$ctr;
 					if ($ctr/$kbps>$elapsed=microtime(TRUE)-$start)
 						usleep(1e6*($ctr/$kbps-$elapsed));
 				}
@@ -385,7 +385,7 @@
 			$options['follow_location'] && $open_basedir &&
 			preg_grep('/HTTP\/[\d.]{1,3} 3\d{2}/',$headers) &&
 			preg_match('/^Location: (.+)$/m',implode(PHP_EOL,$headers),$loc)) {
-			$options['max_redirects']--;
+			--$options['max_redirects'];
 			if($loc[1][0] == '/') {
 				$parts=parse_url($url);
 				$loc[1]=$parts['scheme'].'://'.$parts['host'].
@@ -533,7 +533,7 @@
 				preg_grep('/HTTP\/[\d.]{1,3} 3\d{2}/',$headers) &&
 				preg_match('/Location: (.+?)'.preg_quote($eol).'/',
 				$html[0],$loc)) {
-				$options['max_redirects']--;
+				--$options['max_redirects'];
 				return $this->request($loc[1],$options);
 			}
 		}
@@ -743,7 +743,7 @@
 									// Presume it's a regex pattern
 									$regex=TRUE;
 									// Backtrack and validate
-									for ($ofs=$ptr;$ofs;$ofs--) {
+									for ($ofs=$ptr;$ofs;--$ofs) {
 										// Pattern should be preceded by
 										// open parenthesis, colon,
 										// object property or operator
@@ -751,13 +751,13 @@
 											'/(return|[(:=!+\-*&|])$/',
 											substr($src,0,$ofs))) {
 											$data.='/';
-											$ptr++;
+											++$ptr;
 											while ($ptr<$len) {
 												$data.=$src[$ptr];
-												$ptr++;
+												++$ptr;
 												if ($src[$ptr-1]=='\\') {
 													$data.=$src[$ptr];
-													$ptr++;
+													++$ptr;
 												}
 												elseif ($src[$ptr-1]=='/')
 													break;
@@ -773,7 +773,7 @@
 									if (!$regex) {
 										// Division operator
 										$data.=$src[$ptr];
-										$ptr++;
+										++$ptr;
 									}
 								}
 								continue;
@@ -781,14 +781,14 @@
 							if (in_array($src[$ptr],['\'','"','`'])) {
 								$match=$src[$ptr];
 								$data.=$match;
-								$ptr++;
+								++$ptr;
 								// String literal
 								while ($ptr<$len) {
 									$data.=$src[$ptr];
-									$ptr++;
+									++$ptr;
 									if ($src[$ptr-1]=='\\') {
 										$data.=$src[$ptr];
-										$ptr++;
+										++$ptr;
 									}
 									elseif ($src[$ptr-1]==$match)
 										break;
@@ -804,11 +804,11 @@
 									($ext[0]=='css' && $ptr+2<strlen($src) &&
 									preg_match('/:\w/',substr($src,$ptr+1,2))))
 									$data.=' ';
-								$ptr++;
+								++$ptr;
 								continue;
 							}
 							$data.=$src[$ptr];
-							$ptr++;
+							++$ptr;
 						}
 						if ($ext[0]=='css')
 							$data=str_replace(';}','}',$data);
@@ -842,7 +842,7 @@
 		if (isset($xml->channel)) {
 			$out['source']=(string)$xml->channel->title;
 			$max=min($max,count($xml->channel->item));
-			for ($i=0;$i<$max;$i++) {
+			for ($i=0;$i<$max;++$i) {
 				$item=$xml->channel->item[$i];
 				$list=[''=>NULL]+$item->getnamespaces(TRUE);
 				$fields=[];
@@ -984,7 +984,7 @@
 			'repudiandae rerum saepe sapiente sequi similique sint soluta '.
 			'suscipit tempora tenetur totam ut ullam unde vel veniam vero '.
 			'vitae voluptas');
-		for ($i=0,$add=$count-(int)$std;$i<$add;$i++) {
+		for ($i=0,$add=$count-(int)$std;$i<$add;++$i) {
 			shuffle($rnd);
 			$words=array_slice($rnd,0,mt_rand(3,$max));
 			$out.=(!$std&&$i==0?'':' ').ucfirst(implode(' ',$words)).'.';
diff -ruN old/vendor/composer/autoload_classmap.php new/vendor/composer/autoload_classmap.php
--- old/vendor/composer/autoload_classmap.php	2020-11-03 22:35:28.000000000 +0000
+++ new/vendor/composer/autoload_classmap.php	2022-01-02 21:28:01.000000000 +0000
@@ -6,4 +6,5 @@
 $baseDir = dirname($vendorDir);
 
 return array(
+    'Composer\\InstalledVersions' => $vendorDir . '/composer/InstalledVersions.php',
 );
diff -ruN old/vendor/composer/autoload_real.php new/vendor/composer/autoload_real.php
--- old/vendor/composer/autoload_real.php	2020-11-03 22:35:28.000000000 +0000
+++ new/vendor/composer/autoload_real.php	2022-01-02 21:28:01.000000000 +0000
@@ -13,19 +13,24 @@
         }
     }
 
+    /**
+     * @return \Composer\Autoload\ClassLoader
+     */
     public static function getLoader()
     {
         if (null !== self::$loader) {
             return self::$loader;
         }
 
+        require __DIR__ . '/platform_check.php';
+
         spl_autoload_register(array('ComposerAutoloaderInit043cbf4ae0508c49f665d1a5973c08c0', 'loadClassLoader'), true, true);
-        self::$loader = $loader = new \Composer\Autoload\ClassLoader();
+        self::$loader = $loader = new \Composer\Autoload\ClassLoader(\dirname(\dirname(__FILE__)));
         spl_autoload_unregister(array('ComposerAutoloaderInit043cbf4ae0508c49f665d1a5973c08c0', 'loadClassLoader'));
 
         $useStaticLoader = PHP_VERSION_ID >= 50600 && !defined('HHVM_VERSION') && (!function_exists('zend_loader_file_encoded') || !zend_loader_file_encoded());
         if ($useStaticLoader) {
-            require_once __DIR__ . '/autoload_static.php';
+            require __DIR__ . '/autoload_static.php';
 
             call_user_func(\Composer\Autoload\ComposerStaticInit043cbf4ae0508c49f665d1a5973c08c0::getInitializer($loader));
         } else {
diff -ruN old/vendor/composer/autoload_static.php new/vendor/composer/autoload_static.php
--- old/vendor/composer/autoload_static.php	2020-11-03 22:35:28.000000000 +0000
+++ new/vendor/composer/autoload_static.php	2022-01-02 21:28:01.000000000 +0000
@@ -10,9 +10,14 @@
         '45e8c92354af155465588409ef796dbc' => __DIR__ . '/..' . '/bcosca/fatfree/lib/base.php',
     );
 
+    public static $classMap = array (
+        'Composer\\InstalledVersions' => __DIR__ . '/..' . '/composer/InstalledVersions.php',
+    );
+
     public static function getInitializer(ClassLoader $loader)
     {
         return \Closure::bind(function () use ($loader) {
+            $loader->classMap = ComposerStaticInit043cbf4ae0508c49f665d1a5973c08c0::$classMap;
 
         }, null, ClassLoader::class);
     }
diff -ruN old/vendor/composer/ClassLoader.php new/vendor/composer/ClassLoader.php
--- old/vendor/composer/ClassLoader.php	2020-11-03 22:35:28.000000000 +0000
+++ new/vendor/composer/ClassLoader.php	2022-01-02 21:28:01.000000000 +0000
@@ -37,11 +37,13 @@
  *
  * @author Fabien Potencier <fabien@symfony.com>
  * @author Jordi Boggiano <j.boggiano@seld.be>
- * @see    http://www.php-fig.org/psr/psr-0/
- * @see    http://www.php-fig.org/psr/psr-4/
+ * @see    https://www.php-fig.org/psr/psr-0/
+ * @see    https://www.php-fig.org/psr/psr-4/
  */
 class ClassLoader
 {
+    private $vendorDir;
+
     // PSR-4
     private $prefixLengthsPsr4 = array();
     private $prefixDirsPsr4 = array();
@@ -57,10 +59,17 @@
     private $missingClasses = array();
     private $apcuPrefix;
 
+    private static $registeredLoaders = array();
+
+    public function __construct($vendorDir = null)
+    {
+        $this->vendorDir = $vendorDir;
+    }
+
     public function getPrefixes()
     {
         if (!empty($this->prefixesPsr0)) {
-            return call_user_func_array('array_merge', $this->prefixesPsr0);
+            return call_user_func_array('array_merge', array_values($this->prefixesPsr0));
         }
 
         return array();
@@ -300,6 +309,15 @@
     public function register($prepend = false)
     {
         spl_autoload_register(array($this, 'loadClass'), true, $prepend);
+
+        if (null === $this->vendorDir) {
+            //no-op
+        } elseif ($prepend) {
+            self::$registeredLoaders = array($this->vendorDir => $this) + self::$registeredLoaders;
+        } else {
+            unset(self::$registeredLoaders[$this->vendorDir]);
+            self::$registeredLoaders[$this->vendorDir] = $this;
+        }
     }
 
     /**
@@ -308,6 +326,10 @@
     public function unregister()
     {
         spl_autoload_unregister(array($this, 'loadClass'));
+
+        if (null !== $this->vendorDir) {
+            unset(self::$registeredLoaders[$this->vendorDir]);
+        }
     }
 
     /**
@@ -367,6 +389,16 @@
         return $file;
     }
 
+    /**
+     * Returns the currently registered loaders indexed by their corresponding vendor directories.
+     *
+     * @return self[]
+     */
+    public static function getRegisteredLoaders()
+    {
+        return self::$registeredLoaders;
+    }
+
     private function findFileWithExtension($class, $ext)
     {
         // PSR-4 lookup
diff -ruN old/vendor/composer/installed.json new/vendor/composer/installed.json
--- old/vendor/composer/installed.json	2020-11-03 22:35:28.000000000 +0000
+++ new/vendor/composer/installed.json	2022-01-02 21:28:01.000000000 +0000
@@ -1,35 +1,44 @@
-[
-    {
-        "name": "bcosca/fatfree",
-        "version": "3.7.2",
-        "version_normalized": "3.7.2.0",
-        "source": {
-            "type": "git",
-            "url": "https://github.com/bcosca/fatfree.git",
-            "reference": "b51905e89d2bf970b34c4fbb37879eeb1572e76c"
-        },
-        "dist": {
-            "type": "zip",
-            "url": "https://api.github.com/repos/bcosca/fatfree/zipball/b51905e89d2bf970b34c4fbb37879eeb1572e76c",
-            "reference": "b51905e89d2bf970b34c4fbb37879eeb1572e76c",
-            "shasum": ""
-        },
-        "require": {
-            "php": ">=5.4"
-        },
-        "time": "2020-05-28T16:20:24+00:00",
-        "type": "library",
-        "installation-source": "dist",
-        "autoload": {
-            "files": [
-                "lib/base.php"
-            ]
-        },
-        "notification-url": "https://packagist.org/downloads/",
-        "license": [
-            "GPL-3.0"
-        ],
-        "description": "A powerful yet easy-to-use PHP micro-framework designed to help you build dynamic and robust Web applications - fast!",
-        "homepage": "http://fatfreeframework.com/"
-    }
-]
+{
+    "packages": [
+        {
+            "name": "bcosca/fatfree",
+            "version": "3.7.3",
+            "version_normalized": "3.7.3.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/bcosca/fatfree.git",
+                "reference": "62f40d88994b99a51cfba5556931e80e1bb64a8c"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/bcosca/fatfree/zipball/62f40d88994b99a51cfba5556931e80e1bb64a8c",
+                "reference": "62f40d88994b99a51cfba5556931e80e1bb64a8c",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=5.4"
+            },
+            "time": "2020-12-13T12:52:53+00:00",
+            "type": "library",
+            "installation-source": "dist",
+            "autoload": {
+                "files": [
+                    "lib/base.php"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "GPL-3.0"
+            ],
+            "description": "A powerful yet easy-to-use PHP micro-framework designed to help you build dynamic and robust Web applications - fast!",
+            "homepage": "http://fatfreeframework.com/",
+            "support": {
+                "issues": "https://github.com/bcosca/fatfree/issues",
+                "source": "https://github.com/bcosca/fatfree/tree/3.7.3"
+            },
+            "install-path": "../bcosca/fatfree"
+        }
+    ],
+    "dev": true,
+    "dev-package-names": []
+}
diff -ruN old/vendor/composer/installed.php new/vendor/composer/installed.php
--- old/vendor/composer/installed.php	1970-01-01 01:00:00.000000000 +0100
+++ new/vendor/composer/installed.php	2022-01-02 21:28:01.000000000 +0000
@@ -0,0 +1,33 @@
+<?php return array (
+  'root' => 
+  array (
+    'pretty_version' => 'dev-master',
+    'version' => 'dev-master',
+    'aliases' => 
+    array (
+    ),
+    'reference' => 'b469879ec5153dab89a8152c824228f8e14bd935',
+    'name' => '__root__',
+  ),
+  'versions' => 
+  array (
+    '__root__' => 
+    array (
+      'pretty_version' => 'dev-master',
+      'version' => 'dev-master',
+      'aliases' => 
+      array (
+      ),
+      'reference' => 'b469879ec5153dab89a8152c824228f8e14bd935',
+    ),
+    'bcosca/fatfree' => 
+    array (
+      'pretty_version' => '3.7.3',
+      'version' => '3.7.3.0',
+      'aliases' => 
+      array (
+      ),
+      'reference' => '62f40d88994b99a51cfba5556931e80e1bb64a8c',
+    ),
+  ),
+);
diff -ruN old/vendor/composer/InstalledVersions.php new/vendor/composer/InstalledVersions.php
--- old/vendor/composer/InstalledVersions.php	1970-01-01 01:00:00.000000000 +0100
+++ new/vendor/composer/InstalledVersions.php	2022-01-02 21:28:01.000000000 +0000
@@ -0,0 +1,293 @@
+<?php
+
+/*
+ * This file is part of Composer.
+ *
+ * (c) Nils Adermann <naderman@naderman.de>
+ *     Jordi Boggiano <j.boggiano@seld.be>
+ *
+ * For the full copyright and license information, please view the LICENSE
+ * file that was distributed with this source code.
+ */
+
+namespace Composer;
+
+use Composer\Autoload\ClassLoader;
+use Composer\Semver\VersionParser;
+
+/**
+ * This class is copied in every Composer installed project and available to all
+ *
+ * To require it's presence, you can require `composer-runtime-api ^2.0`
+ */
+class InstalledVersions
+{
+    private static $installed = array (
+  'root' => 
+  array (
+    'pretty_version' => 'dev-master',
+    'version' => 'dev-master',
+    'aliases' => 
+    array (
+    ),
+    'reference' => 'b469879ec5153dab89a8152c824228f8e14bd935',
+    'name' => '__root__',
+  ),
+  'versions' => 
+  array (
+    '__root__' => 
+    array (
+      'pretty_version' => 'dev-master',
+      'version' => 'dev-master',
+      'aliases' => 
+      array (
+      ),
+      'reference' => 'b469879ec5153dab89a8152c824228f8e14bd935',
+    ),
+    'bcosca/fatfree' => 
+    array (
+      'pretty_version' => '3.7.3',
+      'version' => '3.7.3.0',
+      'aliases' => 
+      array (
+      ),
+      'reference' => '62f40d88994b99a51cfba5556931e80e1bb64a8c',
+    ),
+  ),
+);
+    private static $canGetVendors;
+    private static $installedByVendor = array();
+
+    /**
+     * Returns a list of all package names which are present, either by being installed, replaced or provided
+     *
+     * @return string[]
+     * @psalm-return list<string>
+     */
+    public static function getInstalledPackages()
+    {
+        $packages = array();
+        foreach (self::getInstalled() as $installed) {
+            $packages[] = array_keys($installed['versions']);
+        }
+
+
+        if (1 === \count($packages)) {
+            return $packages[0];
+        }
+
+        return array_keys(array_flip(\call_user_func_array('array_merge', $packages)));
+    }
+
+    /**
+     * Checks whether the given package is installed
+     *
+     * This also returns true if the package name is provided or replaced by another package
+     *
+     * @param  string $packageName
+     * @return bool
+     */
+    public static function isInstalled($packageName)
+    {
+        foreach (self::getInstalled() as $installed) {
+            if (isset($installed['versions'][$packageName])) {
+                return true;
+            }
+        }
+
+        return false;
+    }
+
+    /**
+     * Checks whether the given package satisfies a version constraint
+     *
+     * e.g. If you want to know whether version 2.3+ of package foo/bar is installed, you would call:
+     *
+     *   Composer\InstalledVersions::satisfies(new VersionParser, 'foo/bar', '^2.3')
+     *
+     * @param VersionParser $parser      Install composer/semver to have access to this class and functionality
+     * @param string        $packageName
+     * @param string|null   $constraint  A version constraint to check for, if you pass one you have to make sure composer/semver is required by your package
+     *
+     * @return bool
+     */
+    public static function satisfies(VersionParser $parser, $packageName, $constraint)
+    {
+        $constraint = $parser->parseConstraints($constraint);
+        $provided = $parser->parseConstraints(self::getVersionRanges($packageName));
+
+        return $provided->matches($constraint);
+    }
+
+    /**
+     * Returns a version constraint representing all the range(s) which are installed for a given package
+     *
+     * It is easier to use this via isInstalled() with the $constraint argument if you need to check
+     * whether a given version of a package is installed, and not just whether it exists
+     *
+     * @param  string $packageName
+     * @return string Version constraint usable with composer/semver
+     */
+    public static function getVersionRanges($packageName)
+    {
+        foreach (self::getInstalled() as $installed) {
+            if (!isset($installed['versions'][$packageName])) {
+                continue;
+            }
+
+            $ranges = array();
+            if (isset($installed['versions'][$packageName]['pretty_version'])) {
+                $ranges[] = $installed['versions'][$packageName]['pretty_version'];
+            }
+            if (array_key_exists('aliases', $installed['versions'][$packageName])) {
+                $ranges = array_merge($ranges, $installed['versions'][$packageName]['aliases']);
+            }
+            if (array_key_exists('replaced', $installed['versions'][$packageName])) {
+                $ranges = array_merge($ranges, $installed['versions'][$packageName]['replaced']);
+            }
+            if (array_key_exists('provided', $installed['versions'][$packageName])) {
+                $ranges = array_merge($ranges, $installed['versions'][$packageName]['provided']);
+            }
+
+            return implode(' || ', $ranges);
+        }
+
+        throw new \OutOfBoundsException('Package "' . $packageName . '" is not installed');
+    }
+
+    /**
+     * @param  string      $packageName
+     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present
+     */
+    public static function getVersion($packageName)
+    {
+        foreach (self::getInstalled() as $installed) {
+            if (!isset($installed['versions'][$packageName])) {
+                continue;
+            }
+
+            if (!isset($installed['versions'][$packageName]['version'])) {
+                return null;
+            }
+
+            return $installed['versions'][$packageName]['version'];
+        }
+
+        throw new \OutOfBoundsException('Package "' . $packageName . '" is not installed');
+    }
+
+    /**
+     * @param  string      $packageName
+     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as version, use satisfies or getVersionRanges if you need to know if a given version is present
+     */
+    public static function getPrettyVersion($packageName)
+    {
+        foreach (self::getInstalled() as $installed) {
+            if (!isset($installed['versions'][$packageName])) {
+                continue;
+            }
+
+            if (!isset($installed['versions'][$packageName]['pretty_version'])) {
+                return null;
+            }
+
+            return $installed['versions'][$packageName]['pretty_version'];
+        }
+
+        throw new \OutOfBoundsException('Package "' . $packageName . '" is not installed');
+    }
+
+    /**
+     * @param  string      $packageName
+     * @return string|null If the package is being replaced or provided but is not really installed, null will be returned as reference
+     */
+    public static function getReference($packageName)
+    {
+        foreach (self::getInstalled() as $installed) {
+            if (!isset($installed['versions'][$packageName])) {
+                continue;
+            }
+
+            if (!isset($installed['versions'][$packageName]['reference'])) {
+                return null;
+            }
+
+            return $installed['versions'][$packageName]['reference'];
+        }
+
+        throw new \OutOfBoundsException('Package "' . $packageName . '" is not installed');
+    }
+
+    /**
+     * @return array
+     * @psalm-return array{name: string, version: string, reference: string, pretty_version: string, aliases: string[]}
+     */
+    public static function getRootPackage()
+    {
+        $installed = self::getInstalled();
+
+        return $installed[0]['root'];
+    }
+
+    /**
+     * Returns the raw installed.php data for custom implementations
+     *
+     * @return array[]
+     * @psalm-return array{root: array{name: string, version: string, reference: string, pretty_version: string, aliases: string[]}, versions: list<string, array{pretty_version: ?string, version: ?string, aliases: ?string[], reference: ?string, replaced: ?string[], provided: ?string[]}>}
+     */
+    public static function getRawData()
+    {
+        return self::$installed;
+    }
+
+    /**
+     * Lets you reload the static array from another file
+     *
+     * This is only useful for complex integrations in which a project needs to use
+     * this class but then also needs to execute another project's autoloader in process,
+     * and wants to ensure both projects have access to their version of installed.php.
+     *
+     * A typical case would be PHPUnit, where it would need to make sure it reads all
+     * the data it needs from this class, then call reload() with
+     * `require $CWD/vendor/composer/installed.php` (or similar) as input to make sure
+     * the project in which it runs can then also use this class safely, without
+     * interference between PHPUnit's dependencies and the project's dependencies.
+     *
+     * @param  array[] $data A vendor/composer/installed.php data set
+     * @return void
+     *
+     * @psalm-param array{root: array{name: string, version: string, reference: string, pretty_version: string, aliases: string[]}, versions: list<string, array{pretty_version: ?string, version: ?string, aliases: ?string[], reference: ?string, replaced: ?string[], provided: ?string[]}>} $data
+     */
+    public static function reload($data)
+    {
+        self::$installed = $data;
+        self::$installedByVendor = array();
+    }
+
+    /**
+     * @return array[]
+     */
+    private static function getInstalled()
+    {
+        if (null === self::$canGetVendors) {
+            self::$canGetVendors = method_exists('Composer\Autoload\ClassLoader', 'getRegisteredLoaders');
+        }
+
+        $installed = array();
+
+        if (self::$canGetVendors) {
+            // @phpstan-ignore-next-line
+            foreach (ClassLoader::getRegisteredLoaders() as $vendorDir => $loader) {
+                if (isset(self::$installedByVendor[$vendorDir])) {
+                    $installed[] = self::$installedByVendor[$vendorDir];
+                } elseif (is_file($vendorDir.'/composer/installed.php')) {
+                    $installed[] = self::$installedByVendor[$vendorDir] = require $vendorDir.'/composer/installed.php';
+                }
+            }
+        }
+
+        $installed[] = self::$installed;
+
+        return $installed;
+    }
+}
diff -ruN old/vendor/composer/LICENSE new/vendor/composer/LICENSE
--- old/vendor/composer/LICENSE	2020-11-03 22:35:28.000000000 +0000
+++ new/vendor/composer/LICENSE	2022-01-02 21:28:01.000000000 +0000
@@ -1,4 +1,3 @@
-
 Copyright (c) Nils Adermann, Jordi Boggiano
 
 Permission is hereby granted, free of charge, to any person obtaining a copy
@@ -18,4 +17,3 @@
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.
-
diff -ruN old/vendor/composer/platform_check.php new/vendor/composer/platform_check.php
--- old/vendor/composer/platform_check.php	1970-01-01 01:00:00.000000000 +0100
+++ new/vendor/composer/platform_check.php	2022-01-02 21:28:01.000000000 +0000
@@ -0,0 +1,26 @@
+<?php
+
+// platform_check.php @generated by Composer
+
+$issues = array();
+
+if (!(PHP_VERSION_ID >= 50400)) {
+    $issues[] = 'Your Composer dependencies require a PHP version ">= 5.4.0". You are running ' . PHP_VERSION . '.';
+}
+
+if ($issues) {
+    if (!headers_sent()) {
+        header('HTTP/1.1 500 Internal Server Error');
+    }
+    if (!ini_get('display_errors')) {
+        if (PHP_SAPI === 'cli' || PHP_SAPI === 'phpdbg') {
+            fwrite(STDERR, 'Composer detected issues in your platform:' . PHP_EOL.PHP_EOL . implode(PHP_EOL, $issues) . PHP_EOL.PHP_EOL);
+        } elseif (!headers_sent()) {
+            echo 'Composer detected issues in your platform:' . PHP_EOL.PHP_EOL . str_replace('You are running '.PHP_VERSION.'.', '', implode(PHP_EOL, $issues)) . PHP_EOL.PHP_EOL;
+        }
+    }
+    trigger_error(
+        'Composer detected issues in your platform: ' . implode(' ', $issues),
+        E_USER_ERROR
+    );
+}
diff -ruN old/view/header.htm new/view/header.htm
--- old/view/header.htm	2020-11-23 17:57:28.000000000 +0000
+++ new/view/header.htm	2022-01-02 21:32:30.000000000 +0000
@@ -30,7 +30,7 @@
 <script src="<?=$site['base']?>/js/jquery-1.10.9.alpha.js"></script>
 
 <!-- CKEditor -->
-<script src="https://cdn.ckeditor.com/4.15.1/full/ckeditor.js"></script>
+<script src="https://cdn.ckeditor.com/4.17.1/full/ckeditor.js"></script>
 
 <!-- Site Javascript -->
 <script src="<?=$site['base']?>/js/site.js"></script>
